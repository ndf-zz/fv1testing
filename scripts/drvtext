#!/usr/bin/python3
import sys
import os
import re

# Read an FV-1 program source and try to extract the title
# and pot values, then output a dervish display binary fragment

# Latin 1 provides a dodgey pass-through of the addressable chars
ENCODING = 'latin_1'

# check cmd line
if len(sys.argv) != 3:
    print('Usage: ' + sys.argv[0] + ' infile outfile')
    sys.exit(-1)
infile = sys.argv[1]
outfile = sys.argv[2]

# program variables
progno = 0
progname = ''
pot0 = ''
pot1 = ''
pot2 = ''

# extract progno and name from filename
srcname = os.path.basename(infile)
nprogno,sep,rem = srcname.partition('_')
if nprogno.isdigit():
    progno = int(nprogno)
progname = rem.strip().replace('.asm','').replace('_', ' ')[0:20]

# then extract better info from source file
with open(infile,'r') as f:
    for l in f:
        if 'Program' in l:
            m = re.match('^;\s+Program.*?:(.*)$',l)
            if m is not None:
                progname = m.group(1).strip()[0:20]
        elif 'POT' in l:
            m = re.match('^;\s+POT([012]).*?:(.*)$',l)
            if m is not None:
                potno = int(m.group(1))
                pottxt = m.group(2).lstrip()[0:20].rstrip()
                if potno == 0:
                    pot0 = pottxt
                elif potno == 1:
                    pot1 = pottxt
                elif potno == 2:
                    pot2 = pottxt

outtxt = progname.ljust(20) + '\n'
outtxt += pot0.ljust(20) + '\n'
outtxt += pot1.ljust(20) + '\n'
outtxt += pot2.ljust(20) + '\n'
with open(outfile,'wb') as f:
    f.write(outtxt.encode(ENCODING))
